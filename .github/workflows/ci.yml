name: CI

on:
  - push

env:
  POETRY_VIRTUALENVS_IN_PROJECT: true
  POETRY_HOME: ~/poetry

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - "3.8"
          - "3.11"

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached venv
        id: cached-venv
        uses: actions/cache@v3
        with:
          key: venv-${{ matrix.python-version }}-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          path: .venv

      - name: Load cached poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          key: poetry-${{ matrix.python-version }}-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          path: ~/poetry

      - name: Install poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        run: curl https://install.python-poetry.org | python -

      - name: Add poetry binary to PATH
        run: echo "$POETRY_HOME/bin" >> $GITHUB_PATH

      - name: Install dependencies
        if: steps.cached-venv.outputs.cache-hit != 'true'
        run: poetry install --with dev

      - name: Load cached ruff cache
        id: cached-flakeheaven
        uses: actions/cache@v3
        with:
          key: ruff-${{ matrix.python-version }}-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          path: .ruff_cache

      - name: Run ruff
        run: poetry run ruff check .

      - name: Load cached .mypy_cache
        id: cached-mypy
        uses: actions/cache@v3
        with:
          key: mypy-${{ matrix.python-version }}-${{ runner.os }}
          path: .mypy_cache

      - name: Run mypy
        run: poetry run mypy pyanypay
